{"version":3,"sources":["utils/actions.js","utils/playerStore.js","utils/reducerFunctions.js","components/ScoreColumn.js","components/ScoreBoard.js","components/PlayerAdder.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_A_SCORE","ADD_PLAYER","REMOVE_PLAYER","RESET_SCORES","PlayerContext","createContext","loading","players","Provider","reducer","state","action","type","playerIndex","scoreChange","Array","isArray","playerList","scores","push","updateScoreForOnePlayer","newScore","name","addPlayer","playerName","loadingValue","setLoading","filter","_player","index","removePlayer","forEach","player","resetScores","PlayerProvider","value","props","useReducer","dispatch","usePlayerContext","useContext","ScoreColumn","scoreArray","useState","scoreEntryVisible","setScoreEntryVisibility","scoreFieldValue","setScoreFieldValue","scoreFieldRef","useRef","hideScoreField","style","display","onClick","length","reduce","a","b","className","onSubmit","event","preventDefault","onBlur","htmlFor","onChange","parseInt","current","autoFocus","onFocus","currentTarget","select","id","ref","ScoreBoard","playerState","playerDispatch","border","map","PlayerAdder","nameFieldVisible","setNameFieldVisible","nameFieldValue","setNameFieldValue","nameFieldRef","trim","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60c2fbe4.chunk.js","sourcesContent":["export const ADD_A_SCORE = \"UPDATE_SCORE_FOR_ONE_PLAYER\";\r\nexport const ADD_PLAYER = \"ADD_PLAYER\";\r\nexport const REMOVE_PLAYER = \"REMOVE_PLAYER\";\r\nexport const RESET_SCORES = \"RESET_SCORES\";\r\nexport const LOADING = \"LOADING\";","import { createContext, useContext, useReducer } from \"react\";\r\nimport {\r\n  addPlayer,\r\n  removePlayer,\r\n  resetScores,\r\n  setLoading,\r\n  updateScoreForOnePlayer\r\n} from \"./reducerFunctions\";\r\nimport {\r\n  ADD_A_SCORE,\r\n  ADD_PLAYER,\r\n  LOADING,\r\n  REMOVE_PLAYER,\r\n  RESET_SCORES\r\n} from \"./actions\";\r\n\r\nconst PlayerContext = createContext({ loading: false, players: [] });\r\nconst { Provider } = PlayerContext;\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_A_SCORE:\r\n      return updateScoreForOnePlayer(state, action.playerIndex, action.newScore);\r\n    case ADD_PLAYER:\r\n      return addPlayer(state, action.playerName);\r\n    case LOADING:\r\n      return setLoading(state);\r\n    case REMOVE_PLAYER:\r\n      return removePlayer(state, action.playerIndex);\r\n    case RESET_SCORES:\r\n      return resetScores(state);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst PlayerProvider = ({ value = [], ...props }) => {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    loading: false,\r\n    players: [],\r\n  });\r\n\r\n  return <Provider value={[state, dispatch]} {...props} />;\r\n}\r\n\r\nconst usePlayerContext = () => {\r\n  return useContext(PlayerContext);\r\n}\r\n\r\nexport { PlayerProvider, usePlayerContext };\r\n","export const addPlayer = (state, name) => {\r\n  const playerList = state.players || [];\r\n  playerList.push({ name, scores: [] });\r\n\r\n  return { ...state, loading: false, players: playerList };\r\n}\r\n\r\nexport const resetScores = (state) => {\r\n  const playerList = state.players || [];\r\n  playerList.forEach(player => {\r\n    player.scores = [];\r\n  });\r\n  return { ...state, loading: false, players: playerList };\r\n}\r\n\r\nexport const removePlayer = (state, playerIndex) => {\r\n  let playerList = state.players || [];\r\n  playerList = playerList.filter((_player, index) => index !== playerIndex);\r\n\r\n  return { ...state, loading: false, players: playerList };\r\n}\r\n\r\nexport const setLoading = (state, loadingValue = true) => {\r\n  return { ...state, loading: loadingValue };\r\n}\r\n\r\nexport const updateScoreForOnePlayer = (state, playerIndex, scoreChange) => {\r\n  if (Array.isArray(state.players) && state.players[playerIndex]) {\r\n    let playerList = state.players;\r\n    playerList[playerIndex].scores.push(scoreChange);\r\n\r\n    return { ...state, loading: false, players: playerList };\r\n  }\r\n  else return state;\r\n}","import { useRef, useState } from \"react\";\r\nimport { REMOVE_PLAYER, ADD_A_SCORE } from \"../utils/actions\";\r\n\r\nfunction ScoreColumn({ dispatch, playerIndex, player }) {\r\n  const { name, scores } = player || { name: \"Something went wrong. Please refresh and try again.\", scores: [] };\r\n  const [scoreEntryVisible, setScoreEntryVisibility] = useState(false);\r\n  const [scoreFieldValue, setScoreFieldValue] = useState(0);\r\n  const scoreFieldRef = useRef();\r\n\r\n  function handleFormSubmission(event) {\r\n    event.preventDefault();\r\n    const formValue = scoreFieldValue || 0;\r\n    dispatch({ type: ADD_A_SCORE, playerIndex, newScore: formValue });\r\n    hideScoreField();\r\n    setScoreFieldValue(() => 0);\r\n  }\r\n\r\n  function hideScoreField() {\r\n    setScoreEntryVisibility(() => false);\r\n  }\r\n  function showScoreField() {\r\n    setScoreEntryVisibility(() => true);\r\n  }\r\n\r\n  return <div>\r\n    <div style={{ display: \"flex\" }}>\r\n      <h3>{name}</h3>\r\n      <button\r\n        onClick={() => dispatch({ type: REMOVE_PLAYER, playerIndex })}\r\n      >\r\n        Remove\r\n      </button>\r\n    </div>\r\n    <div style={{ display: \"inline-flex\" }}>\r\n      {/* {!!scores.length\r\n        && <ul>\r\n          {scores.map((score, index) => <li key={name + index} style={scores.length - 1 !== index ? { textDecorationLine: \"line-through\" } : { textDecorationLine: \"none\" }}>{score}</li>)}\r\n        </ul>} */}\r\n        Score: {!scores.length ? '0' : sumScoreTotals(scores)}\r\n      {scoreEntryVisible\r\n        ? <form\r\n          className=\"blockDisplay\"\r\n          onSubmit={handleFormSubmission}\r\n          onBlur={hideScoreField}\r\n        >\r\n          <label htmlFor=\"score\">Add points</label>\r\n          <input\r\n            className=\"scoreInput\"\r\n            onChange={() => setScoreFieldValue(parseInt(scoreFieldRef.current.value))}\r\n            autoFocus={true}\r\n            onFocus={({ currentTarget }) => currentTarget.select()}\r\n            type=\"number\"\r\n            id=\"score\"\r\n            name=\"score\"\r\n            ref={scoreFieldRef}\r\n            value={scoreFieldValue}\r\n          />\r\n        </form>\r\n        : <button className=\"scoreButton\" onClick={showScoreField}>Score</button>\r\n      }\r\n    </div>\r\n  </div>;\r\n}\r\n\r\nfunction sumScoreTotals(scoreArray) {\r\n  return scoreArray.reduce((a, b) => a + b);\r\n}\r\n\r\nexport default ScoreColumn;","import { usePlayerContext } from \"../utils/playerStore\";\r\nimport ScoreColumn from \"./ScoreColumn\";\r\n\r\nfunction ScoreBoard() {\r\n  const [playerState, playerDispatch] = usePlayerContext();\r\n  const players = playerState.players || [];\r\n  if (players.length) {\r\n    return <div style={{ display: \"flex\", border: \"black 1px solid\" }}>\r\n      {players.map((player, index) => <ScoreColumn\r\n        dispatch={playerDispatch}\r\n        key={\"player\" + index}\r\n        playerIndex={index}\r\n        player={player}\r\n      />)}\r\n    </div>\r\n  }\r\n  return <></>\r\n}\r\n\r\nexport default ScoreBoard;","import { useRef, useState } from \"react\";\r\nimport { usePlayerContext } from \"../utils/playerStore\";\r\nimport { ADD_PLAYER, RESET_SCORES } from \"../utils/actions\";\r\n\r\nfunction PlayerAdder() {\r\n  const playerDispatch = usePlayerContext()[1];\r\n  const [nameFieldVisible, setNameFieldVisible] = useState(false);\r\n  const [nameFieldValue, setNameFieldValue] = useState(\"\");\r\n  const nameFieldRef = useRef();\r\n\r\n  function handleNameSubmit(event) {\r\n    event.preventDefault();\r\n    const playerName = nameFieldValue.trim();\r\n\r\n    if (playerName !== \"\")\r\n      playerDispatch({ type: ADD_PLAYER, playerName });\r\n\r\n    setNameFieldValue(\"\");\r\n    setNameFieldVisible(false);\r\n  }\r\n\r\n  function changeName() {\r\n    setNameFieldValue(nameFieldRef.current.value);\r\n  }\r\n\r\n  function hideNameField() {\r\n    setNameFieldVisible(false);\r\n  }\r\n\r\n  function resetScores() {\r\n    playerDispatch({ type: RESET_SCORES })\r\n  }\r\n\r\n  function showNameField() {\r\n    setNameFieldVisible(true);\r\n  }\r\n\r\n  return (<>\r\n    {nameFieldVisible\r\n      ? <form onSubmit={handleNameSubmit}>\r\n        <label htmlFor=\"name\">Name (Press enter to add the player, click away to close this)</label>\r\n        <input\r\n          name=\"name\"\r\n          id=\"name\"\r\n          autoFocus={true}\r\n          onBlur={hideNameField}\r\n          onChange={changeName}\r\n          value={nameFieldValue}\r\n          ref={nameFieldRef}\r\n        />\r\n      </form>\r\n      : <>\r\n        <button id=\"addPlayer\" onClick={showNameField}>Add player</button>\r\n        <button id=\"clearScores\" onClick={resetScores}>Reset Scores</button>\r\n      </>}\r\n  </>)\r\n}\r\n\r\nexport default PlayerAdder;","import { PlayerProvider } from \"./utils/playerStore\";\nimport ScoreBoard from \"./components/ScoreBoard\";\nimport PlayerAdder from \"./components/PlayerAdder\";\n\nfunction App() {\n  return (<PlayerProvider>\n    <div>\n      <header >\n        <h2>Welcome to the score Board for Board games</h2>\n      </header>\n      <section>\n        <ScoreBoard />\n        <PlayerAdder />\n      </section>\n    </div>\n  </PlayerProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}